<?php

function facetapi_select_facet_form($form, &$form_state, $variables, $count = 0) {
  $name = 'facetapi_select_facet_form_' . $count;

  // Add link to deactive widget if currently active
  if (!empty($variables['active_items'])) {
    $form['deactivate_links'] = array(
      '#theme' => 'item_list',
      '#items' => $variables['active_items']
    );
  }

  if (!empty($variables['options'])) {
    $form['facets'] = array(
      '#type' => 'select',
      '#id' => $name,
      '#name' => $name,
      '#default_value' => '',
      '#options' => $variables['options'],
      '#attributes' => array(
        'class' => array('facetapi-select'),
      ),
      '#attached' => array(
        'js' => array(
          drupal_get_path('module', 'facetapi_select') .'/js/facetapi_select.js',
        ),
      ),
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#attributes' => array('class' => array('facetapi-select-submit')),
      '#value' => t('Submit'),
    );
  }

  return $form;
}

/**
 * Submit function for facetapi_select_form().
 */
function facetapi_select_facet_form_submit($form, &$form_state) {
  preg_match('/^\/(.*)\?(.*)/', $form_state['values']['facets'], $filters);
  drupal_goto($filters[1], $query = $filters[2]);
}

/**
 * Implements hook_facetapi_widgets().
 */
function facetapi_select_facetapi_widgets() {
  return array(
    'facetapi_select_dropdowns' => array(
      'handler' => array(
        'label' => t('Select Field (Dropdowns)'),
        'class' => 'FacetapiSelectDropdowns',
        'query types' => array('term', 'date'),
      ),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function facetapi_select_theme() {
  return array(
    'facetapi_select_select_option' => array(
      'variables' => array(
        'facet_text' => NULL,
        'facet_count' => 0,
        'show_count' => TRUE,
      ),
    ),
  );
}

/**
 * Theme an individual select option.
 */
function theme_facetapi_select_select_option($variables) {
  $output = $variables['facet_text'];

  if ($variables['show_count']) {
    $output .= ' (' . $variables['facet_count'] . ')';
  }

  return $output;
}

/**
 * Widget that renders facets as dropdowns.
 */
class FacetapiSelectDropdowns extends FacetapiWidgetLinks {

  /**
   * Renders the links.
   */
  public function execute() {
    static $count = 0;
    $count++;
    $element = &$this->build[$this->facet['field alias']];
    $settings = $this->settings;

    $facet_active = FALSE;
    foreach ($element as $value => $item) {
      $path = !empty($this->settings->settings['submit_page']) ? $this->settings->settings['submit_page'] : $item['#path'];
      $path = strpos($item['#path'], $path) === 0 ? $item['#path'] : $path;
      $url = url($path, array('query' => $item['#query']));

      if ($item['#active']) {
        $variables['active_items'][$url] = $this->buildActiveLink($item, $path);
      }
      else {
        $variables['options'][$url] = theme('facetapi_select_select_option', array(
          'facet_text' => $item['#markup'],
          'facet_count' => $item['#count'],
          'show_count' => isset($settings->settings['hide_facet_count']) ? !$settings->settings['hide_facet_count'] : TRUE,
        ));
      }
    }

    if (!empty($variables['options'])) {
      $default_option_label = !empty($settings->settings['default_option_label']) ? $settings->settings['default_option_label'] : t('--Choose--');
      array_unshift($variables['options'], theme('facetapi_select_select_option', array(
        'facet_text' => $default_option_label,
        'show_count' => FALSE,
      )));

    }

    $element = drupal_get_form('facetapi_select_facet_form', $variables, $count);
  }

  /**
   * Build an individual active item link.
   *
   * @param array $item
   *   The facet item to build as an active link.
   * @param string $path
   *   The path to use for the link as determined by the facetapi_select settings.
   *
   * @return string
   *   The built active link based on the specified item.
   */
  protected function buildActiveLink($item, $path) {
    // We call theme directly here because we will be adding these items to a
    // theme_list() build array as the items.
    return theme('facetapi_link_active', array(
      'text' => $item['#markup'],
      'count' => $item['#count'],
      'path' => $path,
      'options' => array(
        'query' => $item['#query'],
        'attributes' => array(
          'class' => 'facetapi-active',
          'id' => drupal_html_id('facetapi-link'),
          'rel' => 'nofollow',
        ),
        // Because the path has already been through url(), mark it as external.
        'html' => TRUE,
      )
    ));
  }

  public function settingsForm(&$form, &$form_state) {
    parent::settingsForm($form, $form_state);

    $states = array(
      'visible' => array(
        'select[name="widget"]' => array('value' => $this->id),
      ),
    );

    $form['widget']['widget_settings']['links'][$this->id]['default_option_label'] = array(
      '#title' => t('Default Option Label'),
      '#type' => 'textfield',
      '#default_value' => !empty($this->settings->settings['default_option_label']) ? $this->settings->settings['default_option_label'] : '',
      '#states' => $states,
    );
    $form['widget']['widget_settings']['links'][$this->id]['submit_page'] = array(
      '#type' => 'textfield',
      '#title' => t('Force this facet to submit to a specific search page'),
      '#description' => t('This facet will always submit to the page it is on if left empty.'),
      '#default_value' => !empty($this->settings->settings['submit_page']) ? $this->settings->settings['submit_page'] : '',
      '#states' => $states,
    );
    $form['widget']['widget_settings']['links'][$this->id]['hide_facet_count'] = array(
      '#type' => 'checkbox',
      '#title' => t('Hide the facet count'),
      '#default_value' => !empty($this->settings->settings['hide_facet_count']) ? $this->settings->settings['hide_facet_count'] : FALSE,
      '#states' => $states,
    );
  }
}
